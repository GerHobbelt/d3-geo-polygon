#!/usr/bin/env node

var width = 960,
    height = 500,
    projectionName = process.argv[2],
    projectionSymbol = "geo" + projectionName[0].toUpperCase() + projectionName.slice(1);

if (!/^[a-z0-9]+$/i.test(projectionName)) throw new Error;

var fs = require("fs"),
    topojson = require("topojson-client"),
    Canvas = require("canvas"),
    d3 = Object.assign({}, require("d3-geo"), require("../"));

var canvas = new Canvas(width, height),
    context = canvas.getContext("2d");

var world = require("world-atlas/world/50m.json"),
    land = topojson.feature(world, world.objects.land),
    graticule = d3.geoGraticule(),
    outline = {type: "Sphere"};

switch (projectionName) {
  case "littrow": outline = graticule.extent([[-90, -60], [90, 60]]).outline(); break;
  case "modifiedStereographicGs50": outline = graticule.extent([[-180, 15], [-50, 75]]).outline(); break;
  case "modifiedStereographicMiller": outline = graticule.extent([[-40, -40], [80, 80]]).outline(); break;
}


var projection;

switch(projectionSymbol) {
    case 'geoCubic45':
      projection = d3["geoCubic"]().angle(-45).parents([-1, 2, 0, 2, 5, 2]).rotate([0,0,45]);
      projection.fitExtent([[0,0],[960,500]], {type:"Sphere"});
      break;
    default:
      projection = d3[projectionSymbol]();
      break;
}

var path = d3.geoPath()
      .projection(projection.precision(0.1))
      .context(context);

context.fillStyle = "#fff";
context.fillRect(0, 0, width, height);

context.beginPath();
path(land);
context.fillStyle = "#000";
context.fill();

context.beginPath();
path(graticule());
context.strokeStyle = "rgba(119,119,119,0.5)";
context.stroke();

context.beginPath();
path(outline);
context.strokeStyle = "#000";
context.stroke();

canvas.pngStream().pipe(process.stdout);
